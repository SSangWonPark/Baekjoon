#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int count = 0;
int stack[100001];
int data[100001];

void push(int n) {
	stack[count] = n;
	count++;
}

void pop() {
	count--;
	stack[count] = 0;
}

int main()
{
	int k;
	int sum = 0;

	scanf("%d", &k);

	for (int i = 0; i < k; i++) 
	{
		scanf("%d", &data[i]);

		if (data[i] == 0) 
		{
			pop();
		}
		else 
		{
			push(data[i]);
		}
	}

	for (int i = 0; i < count; i++)
	{
		sum = sum + stack[i];
	}

	printf("%d\n", sum);

	return 0;
}

// 스택 문제였다.
// stack에 cnt에 따라서 0이 아니면 받고, 0이면 cnt번째를 지우는 식으로 푼다.
// 문제에 배열을 바로바로 지우는게 힌트였다.

// 아래는 실패 코드
// 실패 사유 : 동적 계획법으로 풀려고 했으나 실패
#if 0
#include <stdio.h>

int arr[100001];
int dp[100001];

int main() {
	
	int n = 0;
	int count = 0;

	scanf("%d", &n);

	dp[0] = 0;

	for (int i = 1; i <= n; i++)
	{
		scanf("%d", &arr[i]);

		if (arr[i] != 0)
		{
			dp[i] = dp[i - 1] + arr[i];
			count = 0;
		}
		else
		{
			count++;
			dp[i] = dp[i - 1] - arr[i - count];
		}
	}

	printf("%d", dp[n]);

	return 0;
}
#endif


// 1 1
// 2 3
// 3 5
// 4 4
// 5 0 / 4번 제거
// 6 0 / 3번 제거
// 7 7
// 8 0 / 7번 제거
// 9 0 / 2번 제거
// 10 6
