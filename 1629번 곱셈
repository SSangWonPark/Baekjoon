#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>

int A, B, C;

long long int fun(long long int y) {
	
	if (y == 1) 
	{
		return A % C;
	}

	long long int k = fun(y / 2) % C;

	if (y % 2 == 0) {
		return k * k % C;
	}
	else 
	{
		return k * k % C * A % C;
	}
}

int main() {
	scanf("%d %d %d", &A, &B, &C);

	printf("%lld\n", fun(B));

	return 0;
}

// 지수법칙 : a^(n+m) = a^n * a^m
// 모듈러 성질 : (a* b) % c = (a % c * b % c) % c
// 재귀 함수로 지수 B를 절반으로 계속 나눠서
// k = f(y / 2)
// 짝수일 때 : k * k
// 홀수일 때 : k * k * A 로 지수법칙을 사용하여 시간복잡도를 O(log n)수준으로 낮춰주었다.
// 인터넷을 도움을 받았다... 이런 성질에 대해 잘 알아두자.
