#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#define MOD 1000000000

long long dp[201][201];

int main() {

    int k = 0;
    int n = 0;

    scanf("%d %d", &n, &k);
    
    for (int i = 0; i <= n; i++) {
        dp[1][i] = 1;
    }

    for (int i = 2; i <= k; i++) 
    {
        for (int j = 0; j <= n; j++) 
        {
            for (int l = 0; l <= j; l++) 
            {
                dp[i][j] = (dp[i][j] + dp[i - 1][j - l]) % MOD;
            }
        }
    }

    printf("%lld", dp[k][n]);

    return 0;
}

// 0부터 n까지의 정수 k개로 n을 무조건 만들 수 있음.
// 20 2 에서는 0 20 / 1 19 .. 20 0 까지 21개가 만들어짐.
// 6 4 에서는 0 1 2 3 / 0 1 1 4 / ... 84개 동일한 숫자를 넣어도 됨.
// 
// DP[k][n] = DP[k-1][0] + DP[k-1][1] + .... + DP[k-1][n]
// dp[i][j] = dp[i-1][j-0] + dp[i-1][j-1] + ... + dp[i-1][j-j]
// k번 더해서 n이 나오는 경우의 수
// k가 0이면 0, k가 1이면 1 * n
// dp를 2차원으로도 풀 수 있는걸 염두해두자.

// 이런 방법도 있음.
/*
for(i = 2; i <= k; i++) {
        for (j = 1; j <= n; j++) {
            dp[i][j] = (dp[i][j-1] + dp[i-1][j]) % MOD;
        }
    }
*/
