import sys
input = sys.stdin.readline

N = int(input())

dp = [4] * (N + 1)
dp[0] = 0

squre = [i*i for i in range(1, int(N**0.5) + 1)]

for i in range(1, N + 1):
    for s in squre:
        if s > i:
            break
        
        dp[i] = min(dp[i], dp[i - s] + 1)

print(dp[N])

# 25 <= 5**5 제곱수는 1
# 26 <= 5**5 1**1 제곱수 두개로 이루어진 건 어떻게 일반화 할까.
# 루트씌워서 정수면 제곱수인데, 50000까지 만들고 더할까?
# 제곱해서 정수가 아니면 어떻게 분리를 할까.

# 1 1**1
# 2 1**1 1**1
# 3 1**1 1**1 1**1
# 4 2**2
# 5 2**2 1**1
# 6 2**2 1**1 1**1
# 7 2**2 1**1 1**1 1**1
# 8 2**2 2**2
# 9 3**3
# 10 3**3 1**1

# 11339 /= 105**105 15**15 8**8 5**5 / 사실 3개로 됨. 단순히 루트 씌우고 가장 큰 걸로 자르면 안됨.

# 제곱수들을 리스트로 만들고, 조합해보기. n * sqrt(n)?
# dp[n] = dp[n] 과 dp[n - 제곱수] + 1 을 비교. 
# 0 0 
# 1 1 <= dp[0] + 1
# 2 2 <= dp[1] + 1
# 3 3 <= dp[2] + 1
# 4 1 <= dp[4] or dp[0] + 1. 4 or 1
# 5 2<= dp[5] or dp[4] + 1. 4 or 2

# python 시간초과. pypy3로 시도.